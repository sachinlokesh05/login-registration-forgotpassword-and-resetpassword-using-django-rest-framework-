{"filter":false,"title":"index.js","tooltip":"/index.js","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":33,"column":26},"action":"insert","lines":["\"use strict\";","","/**"," * Small wrapper to wrap your custom type check so that you can use `myCustomType.isRequired` in a similar fasion to React's built-in types."," * "," * Usage:"," *      "," *      var type = propType(function isFoo(props, name){  "," *          if(props[name] !== \"foo\")"," *              return new TypeError(\"not a foo\");"," *      });"," * "," *      // optional by default:"," *      assert.ok( ! type(null) );"," * "," *      // required like so:"," *      assert.ok( type.isRequired(null) );"," * "," */","function propType(typeCheck) {","    var type = function(props, propName) {","        if (props[propName]) return typeCheck.apply(null, arguments);","    };","","    Object.defineProperty(type, \"isRequired\", {","        get: function() {","            return typeCheck;","        }","    });","","    return type;","}","","module.exports = propType;"],"id":1}]]},"ace":{"folds":[],"scrolltop":274,"scrollleft":0,"selection":{"start":{"row":30,"column":16},"end":{"row":30,"column":16},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1443628993439,"hash":"3e9f40832b72d571215cd4d8660c9d1d7dfed3f7"}